kind: pipeline
type: docker
name: deploy-octochord-api

steps:
  - name: restore-cache
    image: drillster/drone-volume-cache
    settings:
      restore: true
      mount:
        - ./node_modules
    volumes:
      - name: cache
        path: /cache

  - name: build-and-push
    image: plugins/docker
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo: icarocedraz/octochord-api
      tags:
        - latest
        - ${DRONE_COMMIT_SHA:0:7}
      cache_from:
        - icarocedraz/octochord-api:cache-${DRONE_BRANCH}
        - icarocedraz/octochord-api:cache-main
      cache_to: icarocedraz/octochord-api:cache-${DRONE_BRANCH},mode=max
      use_buildx: true
      build_args:
        - NODE_ENV=production
      platform: linux/amd64
      use_buildx: true

  - name: save-cache
    image: drillster/drone-volume-cache
    settings:
      rebuild: true
      mount:
        - ./node_modules
    volumes:
      - name: cache
        path: /cache
    when:
      status: [success]

  - name: deploy-to-server
    image: docker:23
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: project-files
        path: /app
    commands:
      - apk add --no-cache docker-cli-compose
      - cd /app
      - docker compose -p octochord --env-file .env.prod pull
      - docker compose -p octochord --env-file .env.prod down --remove-orphans || true
      - docker compose -p octochord --env-file .env.prod up -d --force-recreate --remove-orphans

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
  - name: project-files
    host:
      path: /home/cedraz-ubuntu-2/Documentos/deploys/octochord
  - name: cache
    host:
      path: /tmp/cache

trigger:
  branch:
    - main
  event:
    - push
