kind: pipeline
type: docker
name: deploy-octochord-api

steps:
  - name: build-and-push
    image: docker:23
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: project-files
        path: /app
    environment:
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1
    commands:
      - cd /app
      # login no registry
      - docker login -u $${DOCKER_USERNAME} -p $${DOCKER_PASSWORD}
      # criar/usar builder (ignora erro se j√° existir)
      - docker buildx create --name mybuilder --use || true
      - docker buildx inspect mybuilder --bootstrap
      # tenta puxar o cache (opcional, acelera primeiro passo)
      - docker pull icarocedraz/octochord-api:cache || true
      # buildx com cache remoto (registry) e push da imagem final
      - docker buildx build --platform linux/amd64 \
        --push \
        --tag icarocedraz/octochord-api:latest \
        --tag icarocedraz/octochord-api:${DRONE_COMMIT_SHA:0:7} \
        --cache-from=type=registry,ref=icarocedraz/octochord-api:cache \
        --cache-to=type=registry,ref=icarocedraz/octochord-api:cache,mode=max \
        .
    secrets: [docker_username, docker_password]

  - name: deploy-to-server
    image: docker:23
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: project-files
        path: /app
    commands:
      - apk add --no-cache docker-cli-compose
      - cd /app
      - docker compose -p octochord --env-file .env.prod pull
      - docker compose -p octochord --env-file .env.prod down --remove-orphans || true
      - docker compose -p octochord --env-file .env.prod up -d --force-recreate --remove-orphans

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
  - name: project-files
    host:
      path: /home/cedraz-ubuntu-2/Documentos/deploys/octochord

trigger:
  branch:
    - main
  event:
    - push
