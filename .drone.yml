kind: pipeline
type: docker
name: deploy-octochord-api

steps:
  - name: build-and-push
    image: docker:23
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: project-files
        path: /app
    environment:
      DOCKER_USERNAME:
        from_secret: docker_username
      DOCKER_PASSWORD:
        from_secret: docker_password
    commands:
      - cd /app
      - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      - docker buildx create --name mybuilder --use || true
      - docker buildx inspect mybuilder --bootstrap
      - docker pull icarocedraz/octochord-api:cache || true
      - >
        docker buildx build --platform linux/amd64
        --push
        --tag icarocedraz/octochord-api:latest
        --tag icarocedraz/octochord-api:${DRONE_COMMIT_SHA:0:7}
        --cache-from=type=registry,ref=icarocedraz/octochord-api:cache
        --cache-to=type=registry,ref=icarocedraz/octochord-api:cache,mode=max
        .

  - name: deploy-to-server
    image: docker:23
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: project-files
        path: /app
    commands:
      - apk add --no-cache docker-compose
      - cd /app
      - docker-compose -p octochord --env-file .env.prod pull
      - docker-compose -p octochord --env-file .env.prod down --remove-orphans || true
      - docker-compose -p octochord --env-file .env.prod up -d --force-recreate --remove-orphans

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
  - name: project-files
    host:
      path: /home/cedraz-ubuntu-2/Documentos/deploys/octochord

trigger:
  branch:
    - main
  event:
    - push
