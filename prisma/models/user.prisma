model User {
  id              String    @id @default(uuid())
  name            String
  passwordHash    String    @map("password_hash")
  email           String    @unique
  phone           String
  image           String?
  emailVerifiedAt DateTime? @map("email_verified_at")

  stripeCustomerId         String? @map("stripe_customer_id")
  stripeSubscriptionId     String? @map("stripe_subscription_id")
  stripePriceId            String? @map("stripe_price_id")
  stripeSubscriptionStatus String? @map("stripe_subscription_status")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  providers       Provider[]
  integrations    Integration[]
  apiHealthChecks ApiHealthCheck[]

  @@index([email])
  @@map("users")
}

model Provider {
  id                 String    @id @default(uuid())
  providerId         String    @map("provider_id")
  providerAccountId  String    @map("provider_account_id")
  refreshToken       String?   @map("refresh_token")
  accessToken        String?   @map("access_token")
  accessTokenExpires DateTime? @map("access_token_expires")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([providerId, providerAccountId])
  @@map("providers")
}

model OneTimeCode {
  id         String           @id @default(uuid())
  identifier String           @unique
  code       String
  type       VerificationType
  expiresAt  DateTime
  metadata   Json?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("one_time_codes")
}

enum VerificationType {
  EMAIL_VERIFICATION
  PASSWORD_RESET
}
