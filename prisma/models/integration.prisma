model Integration {
  hookId              String @id @map("hook_id") @db.VarChar(255)
  name                String @unique @map("name") @db.VarChar(255)
  githubWebhookSecret String @map("github_webhook_secret") @db.VarChar(255)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  discordWebhooks  DiscordWebhook[]
  userId           String            @map("user_id") @db.VarChar(255)
  user             User              @relation(fields: [userId], references: [id])
  emailIntegration EmailIntegration?

  @@index([userId])
  @@map("integrations")
}

model EmailIntegration {
  id     Int      @id @default(autoincrement())
  emails String[]

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  integrationId String      @unique @map("integration_id") @db.VarChar(255)
  integration   Integration @relation(fields: [integrationId], references: [hookId], onDelete: Cascade)

  @@map("email_integrations")
}

model DiscordWebhook {
  discordWebhookURL String @map("discord_webhook_url") @db.VarChar(255)
  hookId            String @map("hook_id") @db.VarChar(255)

  integration Integration @relation(fields: [hookId], references: [hookId])

  @@unique([discordWebhookURL, hookId])
  @@index([hookId])
  @@map("discord_webhooks")
}
